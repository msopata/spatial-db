-- msopata
-- 6 
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Kotlin','kotlin@gimail.com','554-456-789');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Hellmans','Hellmans@gimail.com','999-999-999');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Pudliszki','Pudliszki@gimail.com','997-997-997');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Tortex','Tortex@gimail.com','111-222-333');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Heinz','Heinz@gimail.com','478-478-477');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Madero','Madero@gimail.com','222-333-111');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Wloclawek','Wloclawek@gimail.com','101-202-033');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Kamis','Kamis@gimail.com','100-000-000');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Dawtona','Dawtona@gimail.com','258-369-147');
    INSERT INTO sklep.producenci(nazwa_producenta,mail,telefon) VALUES('Roleski','Roleski@gimail.com','333-222-333');
 
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('ketchup',4.50,1);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('bbq',5.50,2);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('majonez',6.60,3);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('ketchup',1.99,4);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('ketchup',2.0,5);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('musztarda',3.50,6);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('dunski',10.50,7);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('pieprz',1.01,8);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('musztarda',4.70,9);
    INSERT INTO sklep.produkty(nazwa_produktu,cena,producent_id_producenta) VALUES('ketchup',5.20,10);
    --
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',10,1);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',20,2);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',30,3);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',40,4);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',50,5);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',60,6);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',50,7);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',40,8);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',20,9);
    INSERT INTO sklep.zamowienia(data,liczba,produkt_id_produktu) VALUES('2020-10-14',3,10);

-- 8
DROP DATABASE s298276;

-- 11
--a 
    SELECT CONCAT('Producent: ', nazwa_producenta, ', liczba_zamowien: ', COUNT(producenci.id_producenta), ', wartosc_zamowienia', liczba*cena) FROM zamowienia INNER JOIN produkty ON zamowienia.id_produktu = produkty.id_produktu INNER JOIN producenci ON produkty.id_producenta = producenci.id_producenta GROUP BY producenci.id_producenta,zamowienia.liczba,produkty.cena;
--b 
    SELECT CONCAT('Produkt: ', nazwa_produktu, ', liczba_zamowien: ', COUNT(id_zamowienia)) FROM produkty INNER JOIN zamowienia ON produkty.id_produktu = zamowienia.id_produktu GROUP BY produkty.id_produktu;
--c
    SELECT * FROM produkty NATURAL JOIN zamowienia;
--d
  -- wykonane wczesniej
--e 
    SELECT * FROM zamowienia WHERE EXTRACT(MONTH FROM data) = 01;
--f 
    SELECT EXTRACT(ISODOW FROM data),COUNT(id_zamowienia) FROM zamowienia GROUP BY EXTRACT(ISODOW FROM data) ORDER BY COUNT(id_zamowienia) DESC;
--g 
    SELECT nazwa_produktu,COUNT(produkty.id_produktu) FROM zamowienia INNER JOIN produkty ON zamowienia.id_produktu = produkty.id_produktu GROUP BY produkty.id_produktu ORDER BY COUNT(produkty.id_produktu) DESC;

-- 12
--a
    SELECT CONCAT('Produkt ',UPPER(nazwa_produktu), ' którego producentem jest ', LOWER(nazwa_producenta), ', zamówiono ', COUNT(id_zamowienia), ' razy') AS opis FROM zamowienia INNER JOIN produkty ON zamowienia.id_produktu = produkty.id_produktu INNER JOIN producenci ON produkty.id_producenta = producenci.id_producenta GROUP BY nazwa_produktu,nazwa_producenta;
--b 
    SELECT * FROM zamowienia INNER JOIN produkty ON zamowienia.id_produktu = produkty.id_produktu WHERE (cena*liczba) NOT IN (SELECT cena*liczba FROM zamowienia INNER JOIN produkty ON zamowienia.id_produktu = produkty.id_produktu ORDER BY cena*liczba DESC LIMIT 3);
--c
    CREATE TABLE klienci(id_klienta SERIAL PRIMARY KEY,mail VARCHAR(255) NOT NULL,numer_telefonu VARCHAR(255) NOT NULL);
--d
    ALTER TABLE zamowienia ADD id_klienta INT;
    ALTER TABLE zamowienia ADD CONSTRAINT fk_zamowienia_klienci FOREIGN KEY (id_klienta) REFERENCES klienci(id_klienta);
	
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Kowalski','111-111-111');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Nowak','222-222-222');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Dabrowski','333-333-333');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Kowalczyk','444-4444-444');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Malinowski','555-555-555');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Kisielewski','666-666-666');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Kowalski2','777-777-777');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Nowak2','888-888-888');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Nowak3','999-999-999');
    INSERT INTO klienci(mail,numer_telefonu) VALUES('Nowak4','111-000-000');
    --
    UPDATE zamowienia SET id_klienta=1 WHERE id_zamowienia=1;
    UPDATE zamowienia SET id_klienta=1 WHERE id_zamowienia=2;
    UPDATE zamowienia SET id_klienta=1 WHERE id_zamowienia=3;
    UPDATE zamowienia SET id_klienta=2 WHERE id_zamowienia=4;
    UPDATE zamowienia SET id_klienta=3 WHERE id_zamowienia=5;
    UPDATE zamowienia SET id_klienta=4 WHERE id_zamowienia=6;
    UPDATE zamowienia SET id_klienta=6 WHERE id_zamowienia=7;
    UPDATE zamowienia SET id_klienta=7 WHERE id_zamowienia=8;
    UPDATE zamowienia SET id_klienta=9 WHERE id_zamowienia=9;
    UPDATE zamowienia SET id_klienta=10 WHERE id_zamowienia=10;

--e
    SELECT mail, numer_telefonu, nazwa_produktu, liczba, (liczba*cena) AS wartosc_zamówienia FROM zamowienia INNER JOIN klienci ON zamowienia.id_klienta = klienci.id_klienta INNER JOIN produkty ON produkty.id_produktu = zamowienia.id_produktu;
--g
    DELETE FROM produkty WHERE id_produktu IN (SELECT produkty.id_produktu FROM produkty WHERE id_produktu NOT IN (SELECT id_produktu FROM zamowienia));

-- 13
--a
    CREATE TABLE numer(liczba INT, CONSTRAINT valid_number CHECK (liczba >= 100 AND liczba <= 999));
--b 
    CREATE SEQUENCE liczba_seq INCREMENT 5 MINVALUE 100 MAXVALUE 125 CYCLE;
--c 
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
    INSERT INTO numer(liczba) VALUES(NEXTVAL('liczba_seq'));
--d 
    ALTER SEQUENCE liczba_seq INCREMENT BY 6;
--e 
    SELECT CURRVAL('liczba_seq');
    SELECT NEXTVAL('liczba_seq');
--f 
    DROP SEQUENCE liczba_seq;

-- 14
--a 
    SELECT * FROM pg_catalog.pg_user;
--b
    CREATE USER Superuser298276 WITH SUPERUSER;
    CREATE USER guest298276;
    GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO guest298276;
    SELECT * FROM pg_catalog.pg_user;
--c 
    ALTER USER Superuser298276 RENAME TO student;
    ALTER USER student WITH NOSUPERUSER;
    GRANT SELECT ON ALL TABLES IN SCHEMA sklep TO student;

-- 15
--a
    BEGIN;
    UPDATE produkty SET cena = cena + 10;
    COMMIT;
--b
    BEGIN;
    UPDATE produkty SET cena = cena + 0.1*cena WHERE id_produktu = 3;
    SAVEPOINT S1;
    UPDATE zamowienia SET liczba = liczba + 0.25*liczba;
    SAVEPOINT S2;
    DELETE FROM klienci WHERE id_klienta = (SELECT zamowienia.id_klienta FROM klienci INNER JOIN zamowienia ON zamowienia.id_klienta = klienci.id_klienta GROUP BY zamowienia.id_klienta ORDER BY zamowienia.id_klienta DESC LIMIT 1);
    ROLLBACK TO S2;
    ROLLBACK;
    COMMIT;